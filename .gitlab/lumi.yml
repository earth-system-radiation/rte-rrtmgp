workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "api"

default:
  tags:
    - lumi

variables:
  SCHEDULER_PARAMETERS: >-
    --account=project_465000454
    --nodes=1
    --ntasks=1
    --cpus-per-task=4
    --mem-per-cpu=1G
    --time=05:00
    ${EXTRA_SCHEDULER_PARAMETERS}
  EXTRA_SCHEDULER_PARAMETERS:

.gpu:
  variables:
    EXTRA_SCHEDULER_PARAMETERS: >-
      --partition=dev-g
      --gpus=1

.cpu:
  variables:
    EXTRA_SCHEDULER_PARAMETERS: >-
      --partition=debug

.cce:
  variables:
    # Core variables:
    FC: ftn
    # Convenience variables:
    VERSION_FCFLAGS: -V
    COMPILER_MODULES: PrgEnv-cray cce/16.0.1 craype-x86-milan

.dp:
  variables:
    FPMODEL: DP
    FAILURE_THRESHOLD: "5.8e-2"

.sp:
  variables:
    FPMODEL: SP
    FAILURE_THRESHOLD: "3.5e-1"

#
# Set up Python virtual environment
#
.python-common:
  variables:
    PYHOME: ${CI_PROJECT_DIR}/python-venv
    FF_USE_FASTZIP: 1

setup-python:
  extends:
    - .cpu
    - .python-common
  script:
    - test ! -d "${PYHOME}" || exit 0
    - module load cray-python
    - python -m venv ${PYHOME}
    - ${PYHOME}/bin/python -m pip install --upgrade pip
    - ${PYHOME}/bin/python -m pip install dask[array] netCDF4 numpy xarray
  cache:
    # Update the key to regenerate the virtual environment:
    key: python-venv-version-1
    paths:
      - ${PYHOME}
  artifacts:
    paths:
      - ${PYHOME}
    expire_in: 60 minutes

.common:
  extends: .python-common
  needs:
    - setup-python
  variables:
    # Make variables:
    RRTMGP_ROOT: ${CI_PROJECT_DIR}
    RRTMGP_DATA: ${CI_PROJECT_DIR}/rrtmgp-data
  before_script:
    - module --force purge
    - module load ${COMPILER_MODULES} ${EXTRA_COMPILER_MODULES} cray-hdf5 cray-netcdf
    # Extend the existing environment variables:
    - export PATH="${PYHOME}/bin:${PATH}"
  script:
    #
    # Build libraries, examples and tests
    #
    - ${FC} ${VERSION_FCFLAGS}
    - make -j8 libs
    #
    # Check out data
    #
    - git clone --depth 1 https://github.com/earth-system-radiation/rrtmgp-data.git "${RRTMGP_DATA}"
    #
    # Run examples and tests
    #
    - make -j8 tests
    #
    # Compare the results
    #
    - make -j8 check

.cce-gpu-openacc:
  extends:
    - .gpu
    - .cce
    - .common
  variables:
    # Compiler flags used for ICON model:
    FCFLAGS: -hacc -hadd_paren -Ktrap=divz,ovf,inv -hflex_mp=intolerant -hfp1 -g -DRTE_USE_${FPMODEL}
    RTE_KERNELS: accel
    # Convenience variables:
    EXTRA_COMPILER_MODULES: craype-accel-amd-gfx90a rocm

cce-gpu-openacc-DP:
  extends:
    - .dp
    - .cce-gpu-openacc

cce-gpu-openacc-SP:
  extends:
    - .sp
    - .cce-gpu-openacc
